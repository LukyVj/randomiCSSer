{"version":3,"file":"index.module.js","sources":["../src/index.ts"],"sourcesContent":["interface RandomCSSVariableProps {\n  variable?: string;\n  unit?: string;\n  amount?: number;\n  target?: HTMLBodyElement | null;\n  range?: {\n    min?: number;\n    max?: number;\n    round?: boolean;\n  };\n}\n\nconst randomCSSVariable = ({\n  variable = 'random',\n  unit = '',\n  amount = 3,\n  target = typeof window === 'undefined' ? null : document.querySelector('body'),\n  range = {\n    min: 1,\n    max: 100,\n    round: false,\n  },\n}: RandomCSSVariableProps) => {\n  const root = target;\n\n  const ALL_VARS: string[] = [];\n  const VARIABLE = variable;\n  const UNIT = unit;\n  const AMOUNT = amount;\n\n  const value = (min: number, max: number, round: boolean) => {\n    const delta = max - min;\n    const rand = round ? Math.round(min + Math.random() * delta) : min + Math.random() * delta;\n\n    return rand;\n  };\n  const generate = ({ length, dom }: { length: number; dom: boolean }) => {\n    Array.from({ length }).map((_, index) => {\n      const VAR_NAME = `--${VARIABLE}-${index}`;\n      const VAR_VALUE =\n        UNIT !== ''\n          ? `\"${value(range.min || 1, range.max || 100, range.round || true)}${UNIT}\"`\n          : `${value(range.min || 1, range.max || 100, range.round || true)}`;\n      ALL_VARS.push(`{\"${VAR_NAME}\":${VAR_VALUE}}`);\n      if (root && dom) {\n        root.style.setProperty(`${VAR_NAME}`, `${VAR_VALUE}`);\n      }\n    });\n  };\n\n  const load = (dom?: boolean) => {\n    generate({\n      length: AMOUNT,\n      dom: dom === false ? false : true,\n    });\n  };\n\n  const getVars = (i?: number) => {\n    load(false);\n    const result = i ? ALL_VARS[i] : ALL_VARS.join(',');\n    return JSON.parse(`[${result}]`);\n  };\n\n  return { load, getVars };\n};\n\nexport default randomCSSVariable;\n"],"names":["randomCSSVariable","_ref","variable","_ref$variable","unit","_ref$unit","amount","_ref$amount","_ref$target","target","window","document","querySelector","range","_ref$range","min","max","round","root","ALL_VARS","VARIABLE","UNIT","Math","random","delta","load","dom","length","_ref2","Array","from","map","_","index","VAR_VALUE","value","push","VAR_NAME","style","setProperty","generate","AMOUNT","getVars","i","result","join","JSON","parse"],"mappings":"AAYMA,MAAoB,SAAHC,WACrBC,SAAAA,OAAQ,IAAAC,EAAG,SACXC,EAAAA,EAAAA,EAAAA,KAAAA,OAAI,IAAAC,EAAG,GACPC,EAAAA,EAAAA,EAAAA,OAAAA,aAAS,EAACC,EAAAC,EAAAP,EACVQ,OAAAA,aAA2B,oBAAXC,OAAyB,KAAOC,SAASC,cAAc,QACvEC,EAAAA,EAAAA,EAAAA,MAAAA,OAAK,IAAAC,EAAG,CACNC,IAAK,EACLC,IAAK,IACLC,OAAO,KAGHC,EAAOT,EAEPU,EAAqB,GACbC,EAAGlB,EACPmB,EAAGjB,IACEE,IAED,SAACS,EAAaC,EAAaC,GACvC,MAAcD,EAAMD,EAGpB,OAFaE,EAAQK,KAAKL,MAAMF,EAAMO,KAAKC,SAAWC,GAAST,EAAMO,KAAKC,SAAWC,CAGvF,EAeMC,EAAO,SAACC,IAdG,YAAGC,IAAQD,EAAGE,EAAHF,IAC1BG,MAAMC,KAAK,CAAEH,SADKA,SACKI,IAAI,SAACC,EAAGC,GAC7B,MAAsBb,KAAAA,EAAYa,IAAAA,EAC5BC,EACK,KAATb,EAAW,IACHc,EAAMtB,EAAME,KAAO,EAAGF,EAAMG,KAAO,IAAKH,EAAMI,QAAS,GAAQI,SAChEc,EAAMtB,EAAME,KAAO,EAAGF,EAAMG,KAAO,IAAKH,EAAMI,QAAS,GAChEE,EAASiB,KAAUC,KAAAA,EAAaH,KAAAA,OAC5BhB,GAAQQ,GACVR,EAAKoB,MAAMC,YAAW,GAAIF,EAAeH,GAAAA,EAE7C,EACF,CAGEM,CAAS,CACPb,OAAQc,EACRf,KAAa,IAARA,GAET,EAQA,MAAO,CAAED,KAAAA,EAAMiB,QANC,SAACC,GACflB,GAAK,GACL,IAAMmB,EAASD,EAAIxB,EAASwB,GAAKxB,EAAS0B,KAAK,KAC/C,OAAOC,KAAKC,UAAUH,EAAM,IAC9B,EAGF"}